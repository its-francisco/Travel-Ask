function createAnswer(e){const t=e.answer,n=t.post_id,s=document.createElement("li");s.id=n,s.classList.add("answer");const r=t.post.user.account.toLowerCase()==="moderator",c=t.post.user.account.toLowerCase()==="verified";let o=document.createElement("div");o.innerHTML=t.post.content;let l=o.textContent;s.innerHTML=`
    <div class="edit-zone">
        <button class="button-icon material-symbols-outlined edit-answer" id="${n}-edit-answer" title="Edit Answer">edit</button>
        <div class="confirmation">
            <button class="confirm-action delete-answer ${r?"force-delete":""}"> 
                <span class="material-symbols-outlined" title="Delete Answer">delete</span>
            </button>
        </div>   
        <form id="${n}_edit_answer_form" class="hide">    
            <label for="edit-content-${n}">Edit your answer: <abbr class="requiredField" title="mandatory field">*</abbr>
                        <textarea id="content-editor-${n}" name="content">${l}</textarea></label>            
            <div class="answer-editor" id="editor-${n}">${t.post.content}</div>
            <button type="submit" class="submit-edit-answer">Save</button>
        </form>  
    </div>
    <div id="${n}-answer-content" class="answer-content" data-id="${n}">
        <div class="answer-text">${t.post.content}</div>
        <a href="/users/${t.post.user_id}" class="author">
            <div class="image-container">
                    <img class="profile_photo ${t.post.user.travelling?"travelling":""}" src="${t.post.user.photo?"/profile/"+t.post.user.photo:"/profile/default.png"}"
                         alt="${escapeHtml(t.post.user.username)}'s profile photo">
                        ${c?'<span class="material-symbols-outlined">verified</span>':""}
            </div>
            ${escapeHtml(t.post.user.name)}
        </a>
        <div class="votes" data-post-id="${n}">
            <button class="button-icon material-symbols-outlined" title="UpVote" data-vote="Up">thumb_up</button>
            <span class="upvotes-count">0</span>
            <button class="button-icon material-symbols-outlined" title="DownVote" data-vote="Down">thumb_down</button>
            <span class="downvotes-count">0</span>
        </div>
        <p class="date">now</p>
    </div>
    <section class="comment-section" data-id="${t.post_id}">
        <div class="comments-sum">
            <p>0</p>
            <button class="button-icon material-symbols-outlined icon" title="Show comments">mode_comment</button>
        </div>
        <input type="button" id="add-comment" class="add-comment hide" value="add a comment here">
        <form class="create_comment hide">
            <label for="new_comment_content">Write your comment here: <abbr class="requiredField" title="mandatory field">*</abbr></label>
            <textarea name="content" class="new_comment_content" maxlength="100" cols="10" rows="10"></textarea>
            <input type="submit" value="submit content" data-id="${t.post_id}">
        </form>
    </section>
    `;const i=s.querySelector(".delete-answer");setAsConfirmAction(i),i.addEventListener("click",sendDeleteAnswerRequestHandler);const a=s.querySelectorAll(".votes button");return a&&a.forEach(e=>e.onclick=voteClickHandler),s}function answerCreateHandler(){let e=JSON.parse(this.responseText);if(this.status===200){const n=document.getElementById("answers")??(()=>{const e=document.createElement("ul");return e.classList.add("answers"),e.classList.add("container"),e.id="answers",document.getElementById("answer-thread").appendChild(e),e})(),t=createAnswer(e);n.appendChild(t);const s=t.querySelector('.create_comment input[type="submit"]'),o=t.querySelector(".comment-section");commentSectionHandler(o),submitCommentHandler(s),addAnswerEditListeners(e.answer.post_id);let i=getQuill(`#editor-${e.answer.post_id}`);document.getElementById(`content-editor-${e.answer.post_id}`).style.display="none";const a=i.getModule("toolbar");a.addHandler("image",imageHandler),document.getElementById("new-answer").querySelector(".ql-editor").innerHTML="";const r=document.querySelector(".answers h4").innerText,c=parseInt(r.match(/(\d+)/)[0])+1;document.querySelector(".answers h4").innerText=c+" answers",displaySuccess("Answer posted successfully")}else displayError(e.message);submit=!0}let submit=!0;async function postAnswerEventListener(){const e=document.getElementById("create_answer");e&&e.addEventListener("submit",async e=>{if(e.preventDefault(),!submit)return;submit=!1;const t=sanitizeHTML(quillAnswer.root.innerHTML),n=document.querySelector(".question").id;sendAjaxRequest("put",`/api/questions/${n}`,{content:t},answerCreateHandler)})}if(postAnswerEventListener(),document.getElementById("new-answer")){quillAnswer=getQuill("#new-answer"),document.getElementById("answer_content").style.display="none";const e=quillAnswer.getModule("toolbar");e.addHandler("image",imageHandler)}const create_question_form=document.getElementById("create_question_form");create_question_form&&create_question_form.addEventListener("submit",function(e){e.preventDefault(),sendAjaxRequest("put",`/api/questions/`,getQuestionFields(),questionCreateHandler,"application/json")});function questionCreateHandler(){let e=JSON.parse(this.responseText);if(this.status===200)window.location=`/questions/${e}`;else if(displayError(e.message),this.status===422){const e=JSON.parse(this.response).errors;placeInputErrors(e,create_question_form)}}function togglevisibility(e,t,n,s="block"){e.innerHTML==="edit"?(t.style.display="none",n.style.display=s,e.innerHTML="edit_off"):e.innerHTML==="edit_off"&&(t.style.display=s,n.style.display="none",e.innerHTML="edit")}function toggleEditQuestionView(){togglevisibility(elementById("edit_question"),elementById("question_content"),elementById("edit_question_form"),"grid")}function toggleEditAnswerView(){togglevisibility(elementById(this+"-edit-answer"),elementById(this+"-answer-content"),elementById(this+"_edit_answer_form"),"grid"),document.querySelector('li.answer[id="'+this+'"]').style.display="grid"}function toggleEditCommentView(){togglevisibility(this,this.parentElement.parentElement.querySelector(".comment-content"),this.parentElement.querySelector(".edit-comment-form")),this.parentElement.querySelector(".edit-comment-form textarea").focus()}function toggleProfileView(){togglevisibility(elementById("edit"),elementById("profile-other-content"),elementById("form-edit-profile"),"block")}function addSelectedTags(){const e=document.querySelector("ul.tags");e.innerHTML="";const t=document.querySelectorAll(".multi-select-selected:not(.multi-select-all)");t.forEach(function(t){const n=document.createElement("li");n.innerHTML=`<a href="/search?query=%5B${escapeHtml(t.textContent).trim()}%5D">${escapeHtml(t.textContent)}</a>`,e.appendChild(n)})}function addSelectedLocation(){const i=elementById("country"),a=elementById("city"),e=i.value,s=a.value,t=elementById("question-city"),o=elementById("question_content");if(e===""){o.querySelector(".location").remove();return}const r=i.querySelector('option[value="'+e+'"]').textContent,c=a.querySelector('option[value="'+s+'"]').textContent;let n=elementById("question-country");if(n)n.textContent=r;else{const t=document.createElement("div");t.classList.add("location"),t.innerHTML=`
                    <span class="material-symbols-outlined location-icon" title="Location">location_on</span>
                    <a href="http://localhost:8000/countries/${e}" class="country" id="question-country" data-country-id="${e}"> ${r} </a>
                                    `,o.querySelector(".date").insertAdjacentElement("afterend",t),n=o.querySelector(".country")}s===""?t&&t.remove():t?t.textContent=c:n.insertAdjacentHTML("afterend",`<a href="http://localhost:8000/cities/${s}" class="city" id="question-city" data-city-id="${e}"> ${c} </a>`)}function questionUpdateHandler(){let e=JSON.parse(this.responseText);if(clearInputErrors(),this.status===200)elementById("question-content").innerHTML=e.content,elementById("question-title").textContent=e.title,elementById("question_content").querySelector(".edited")||(elementById("question_content").innerHTML+=`<p class="edited">[Edited]</p>`),addSelectedLocation(),addSelectedTags(),toggleEditQuestionView(),displaySuccess("Edited question successfully!");else if(displayError(e.message),this.status===422){const e=JSON.parse(this.response).errors,t=elementById("edit_question_form");placeInputErrors(e,t)}}function answerUpdateHandler(){let e=JSON.parse(this.responseText);if(this.status===200){const t=e.post.id;elementById(t+"-answer-content").querySelector(".answer-text").innerHTML=e.post.content,elementById(t+"-answer-content").querySelector(".edited")||(elementById(t+"-answer-content").innerHTML+=`<p class="edited">[Edited]</p>`),toggleEditAnswerView.call(t),displaySuccess("Edited answer successfully!")}else displayError(e.message)}function commentUpdateHandler(){let e=JSON.parse(this.responseText);if(this.status===200){const n=e.comment.id,t=document.querySelector('.comment[data-id="'+n+'"] .edit-comment');t.parentElement.parentElement.querySelector("p.comment-content").textContent=e.comment.content,toggleEditCommentView.call(t),displaySuccess("Edited comment successfully!")}else displayError(e.message)}function checkSameQuestion(){if(elementById("question-title").textContent!==elementById("title").value)return!1;if(elementById("question-content").innerHTML!==elementById("editor").querySelector(".ql-editor").innerHTML)return!1;if((elementById("question-country")?elementById("question-country").getAttribute("data-country-id"):"")!==(elementById("country")?elementById("country").value:""))return!1;if((elementById("question-city")?elementById("question-city").getAttribute("data-city-id"):"")!==(elementById("city")?elementById("city").value:""))return!1;const e=document.querySelectorAll(".multi-select-selected:not(.multi-select-all)"),t=[...e].map(e=>e.getAttribute("data-value")),n=document.querySelectorAll(".tags li a"),s=[...n].map(e=>e.getAttribute("data-tag-id"));return t.toString()===s.toString()}async function saveQuestionEdit(e){e.preventDefault();const t=document.querySelector("article.question").id;if(checkSameQuestion(t)){toggleEditQuestionView();return}sendAjaxRequest("post",`/api/questions/${t}`,getQuestionFields(),questionUpdateHandler,"application/json")}async function saveAnswerEdit(e,t){e.preventDefault();const n=sanitizeHTML(elementById("editor-"+t).querySelector(".ql-editor").innerHTML);if(n===elementById(t+"-answer-content").querySelector(".answer-text").innerHTML){toggleEditAnswerView.call(t);return}sendAjaxRequest("post",`/api/answers/${t}`,{content:n},answerUpdateHandler)}async function saveCommentEdit(e){e.preventDefault();const t=this.parentElement.getAttribute("data-id"),n=this.parentElement.querySelector("textarea").value;sendAjaxRequest("post",`/api/comments/${t}`,{content:n},commentUpdateHandler)}const edit_profile=elementById("edit");edit_profile&&edit_profile.addEventListener("click",toggleProfileView);const edit_question=elementById("edit_question");edit_question&&edit_question.addEventListener("click",toggleEditQuestionView);const question_form=document.getElementById("edit_question_form");question_form&&question_form.addEventListener("submit",saveQuestionEdit);function addAnswerEditListeners(e){elementById(e+"-edit-answer").addEventListener("click",toggleEditAnswerView.bind(e));const t=elementById(e+"_edit_answer_form").querySelector("button[type='submit']");t.addEventListener("click",async t=>saveAnswerEdit(t,e))}const answers=document.querySelectorAll(".edit-answer");answers&&[].forEach.call(answers,function(e){addAnswerEditListeners(e.parentElement.parentElement.id)});const comments=document.querySelectorAll(".comment");comments&&[].forEach.call(comments,function(e){const t=e.querySelector(".edit-comment");t&&addCommentEditListeners(t,e["data-id"])});function addCommentEditListeners(e){e.addEventListener("click",toggleEditCommentView);const t=e.parentElement.querySelector(".submit-edit-comment");t.addEventListener("click",async function(e){e.preventDefault(),saveCommentEdit.call(t,e)})}const answerEditor=document.querySelectorAll(".answer-editor");answerEditor&&answerEditor.forEach(function(e){let t=getQuill(`#${e.id}`);document.getElementById(`content-${e.id}`).style.display="none";const n=t.getModule("toolbar");n.addHandler("image",imageHandler)});async function addEventListeners(){const n=document.querySelectorAll(".delete-answer");[].forEach.call(n,function(e){e.addEventListener("click",sendDeleteAnswerRequestHandler)});const e=document.querySelector(".delete-question");e&&e.addEventListener("click",sendDeleteQuestionRequestHandler);const t=document.querySelector(".remove-authorship-question");t&&t.addEventListener("click",sendRemoveAuthorshipRequestHandler);const s=document.querySelectorAll(".delete-comment");[].forEach.call(s,function(e){e.addEventListener("click",sendDeleteCommentRequestHandler)})}function sendDeleteAnswerRequestHandler(){const e=this.parentElement.parentElement.parentElement.id;this.classList.contains("force-delete")?sendAjaxRequest("delete",`/api/answers/${e}`,{force:!0},answerForceDeletedHandler):sendAjaxRequest("delete",`/api/answers/${e}`,{},answerDeletedHandler)}function sendDeleteQuestionRequestHandler(){const e=this.parentElement.parentElement.id;sendAjaxRequest("delete",`/api/questions/${e}`,{},questionDeletedHandler)}function sendRemoveAuthorshipRequestHandler(){const e=this.parentElement.parentElement.id;sendAjaxRequest("delete",`/api/questions/${e}/author`,{},removedAuthorHandler)}function sendDeleteCommentRequestHandler(){const e=this.parentElement.parentElement.parentElement.getAttribute("data-id");sendAjaxRequest("delete",`/api/comments/${e}`,{},commentDeletedHandler)}function answerDeletedHandler(){const e=JSON.parse(this.responseText);if(this.status===200){let t=document.querySelector('li.answer[id="'+e.id+'"]');t.removeChild(t.querySelector("div.edit-zone")),t.removeChild(t.querySelector("div.answer-content")),t.innerHTML=`<p id="${e.id}-answer-content">This answer was deleted</p>`+t.innerHTML,displaySuccess("Successfully deleted answer!")}else displayError(e.message)}function answerForceDeletedHandler(){const e=JSON.parse(this.responseText);this.status===200?(document.querySelector('li.answer[id="'+e.id+'"]').remove(),displaySuccess("Successfully deleted answer!")):displayError(e.message)}function questionDeletedHandler(){this.status===200?window.location="/":displayError(JSON.parse(this.responseText).message)}function removedAuthorHandler(){this.status===200?window.location.reload():displayError(JSON.parse(this.responseText).message)}function commentDeletedHandler(){const e=JSON.parse(this.responseText);if(this.status===200){let t=document.querySelector('li.comment[data-id="'+e.id+'"]');const s=t.parentElement.parentElement;t.parentElement.removeChild(t);const n=s.querySelector(".comments-sum p");n.innerHTML=parseInt(n.innerHTML)-1,parseInt(n.innerHTML)===0&&s.querySelector("ul.comments").remove(),displaySuccess("Successfully deleted comment!")}else displayError(e.message)}addEventListeners();const selectElement=document.getElementById("country");selectElement&&selectElement.addEventListener("change",function(){const e=elementById("city");e.setAttribute("disabled",!0),e.innerHTML='<option value="" id="empty-city">Select City</option>',selectElement.value!==""&&fetch(`/api/cities/${selectElement.value}`).then(e=>e.json()).then(t=>{e.removeAttribute("disabled"),t.forEach(t=>{const n=createOption(t.id,t.name);e.appendChild(n)})})});const followButton=document.querySelector("#followButton"),followIcon=document.querySelector(".material-symbols-outlined.follow");if(followButton&&followIcon){const e=followButton.getAttribute("data-id"),t=`/api/questions/${e}/isFollowing`;sendAjaxRequest("GET",t,{},function(){if(this.status>=200&&this.status<300){const e=JSON.parse(this.responseText);e.isFollowing&&(followButton.classList.add("followed"),followIcon.classList.add("followed"),followIcon.textContent="check_circle")}},"application/json"),followButton.addEventListener("click",function(){const t=`/api/questions/${e}/toggleFollow`;sendAjaxRequest("POST",t,{},function(){if(this.status>=200&&this.status<300){const e=JSON.parse(this.responseText);e.message==="Followed successfully"?(followButton.classList.add("followed"),followIcon.classList.add("followed"),followIcon.textContent="check_circle",displaySuccess("Question followed successfully!")):e.message==="Unfollowed successfully"&&(followButton.classList.remove("followed"),followIcon.classList.remove("followed"),followIcon.textContent="add_circle",displaySuccess("Question unfollowed successfully!"))}else{const e=JSON.parse(this.responseText);displayError(e.message),e.message==="You need to login first"&&openLoginOverlay()}},"application/json")})}function voteClickHandler(){const e=this.closest(".votes"),n=e.getAttribute("data-post-id"),t=this.getAttribute("data-vote");sendAjaxRequest("POST",`/api/posts/${n}/vote`,{vote:t},function(){if(this.status>=200&&this.status<300){{const n=JSON.parse(this.responseText);if(n.message==="Vote added successfully"||n.message==="Vote updated successfully"||n.message==="Vote removed successfully"){const s=e.querySelector(".upvotes-count"),o=e.querySelector(".downvotes-count"),i=e.querySelector(".thumb-up"),a=e.querySelector(".thumb-down");t==="Up"?n.message==="Vote removed successfully"?(i.classList.remove("upvoted"),s.textContent=parseInt(s.textContent)-1):n.message==="Vote added successfully"?(i.classList.add("upvoted"),s.textContent=parseInt(s.textContent)+1):n.message==="Vote updated successfully"&&(i.classList.add("upvoted"),s.textContent=parseInt(s.textContent)+1,a.classList.remove("downvoted"),o.textContent=parseInt(o.textContent)-1):n.message==="Vote removed successfully"?(a.classList.remove("downvoted"),o.textContent=parseInt(o.textContent)-1):n.message==="Vote added successfully"?(a.classList.add("downvoted"),o.textContent=parseInt(o.textContent)+1):n.message==="Vote updated successfully"&&(a.classList.add("downvoted"),o.textContent=parseInt(o.textContent)+1,i.classList.remove("upvoted"),s.textContent=parseInt(s.textContent)-1)}}}else{const e=JSON.parse(this.responseText);displayError(e.message),e.message==="You need to login first"&&openLoginOverlay()}},"application/json")}const voteButtons=document.querySelectorAll(".votes .material-symbols-outlined");voteButtons&&voteButtons.forEach(e=>{e.addEventListener("click",voteClickHandler)});const voteContainers=document.querySelectorAll(".votes");voteContainers&&voteContainers.forEach(e=>{const t=e.getAttribute("data-post-id"),n=e.querySelector(".thumb-up"),s=e.querySelector(".thumb-down");e.closest(".questionVotes")&&sendAjaxRequest("GET",`/api/questions/${t}/hasUserVoted`,{},function(){if(this.status>=200&&this.status<300){const e=JSON.parse(this.responseText);e.hasVoted&&(e.vote==="Up"?n.classList.add("upvoted"):e.vote==="Down"&&s.classList.add("downvoted"))}},"application/json"),e.closest(".answers")&&sendAjaxRequest("GET",`/api/answers/${t}/hasUserVoted`,{},function(){if(this.status>=200&&this.status<300){const e=JSON.parse(this.responseText);e.hasVoted&&(e.vote==="Up"?n.classList.add("upvoted"):e.vote==="Down"&&s.classList.add("downvoted"))}},"application/json")});const submitCommentButtons=document.querySelectorAll(".create_comment button");submitCommentButtons&&submitCommentButtons.forEach(function(e){submitCommentHandler(e)});const commentSections=document.querySelectorAll(".comment-section");commentSections&&commentSections.forEach(function(e){commentSectionHandler(e)});function commentSectionHandler(e){const n=e.querySelector(".comments-sum"),t=e.querySelector("input.add-comment"),s=e.querySelector("form.create_comment");n&&n.addEventListener("click",()=>{const n=e.querySelector(".comments");let o=!1;n?(o=n.classList.toggle("show"),o?t.classList.add("show"):t.classList.remove("show")):t.classList.toggle("show"),s.style.display="none"})}function submitCommentHandler(e){const t=e.parentElement,n=t.parentElement.querySelector("input.add-comment");n.addEventListener("click",e=>{e.preventDefault(),n.classList.remove("show"),t.style.display="block"}),e.addEventListener("click",s=>{s.preventDefault();const o=t.querySelector(".new_comment_content").value,i=e.getAttribute("data-id");sendAjaxRequest("put",`/api/posts/${i}`,{content:o},commentCreateHandler),t.style.display="none",t.querySelector("textarea").value="",t.querySelector("textarea").innerText="",n.classList.add("show")})}function commentCreateHandler(){let e=JSON.parse(this.responseText);if(this.status===200){const t=document.querySelector('.comment-section[data-id="'+e.comment.post_id+'"]'),s=t.querySelector("ul.comments")??(()=>{const e=document.createElement("ul");return e.classList.add("show","hide","comments"),t.querySelector(".comments-sum").parentElement.insertAdjacentElement("afterend",e),e})();s.appendChild(createComment(e));const n=t.querySelector(".comments-sum p");n.innerHTML=parseInt(n.innerHTML)+1,t.querySelector(".new_comment_content").value}else displayError(e.message)}function createComment(e){const t=e.comment,n=document.createElement("li");n.classList.add("comment"),n.setAttribute("data-id",t.id),n.innerHTML=`
        <div class="edit-zone">
            <button class="button-icon edit-comment material-symbols-outlined" data-id="${t.id}" title="Edit Comment">edit</button>
            <div class="confirmation">
                <button class="confirm-action delete-comment">
                    <span class="material-symbols-outlined" title="Delete Comment">delete</span>
                 </button>
            </div>
            <form data-id="${t.id}" class="edit-comment-form">
                <label>
                <textarea name="content" maxlength="1000">${escapeHtml(t.content)}</textarea></label>
                <button type="submit" class="submit-edit-comment">Save</button>
            </form>
        </div>
        <p class="comment-content">${escapeHtml(t.content)}</p>
        <a href="/users/${t.user_id}">${escapeHtml(t.user.name)}</a>
    `;const s=n.querySelector(".delete-comment");setAsConfirmAction(s),s.addEventListener("click",sendDeleteCommentRequestHandler);const o=n.querySelector(".edit-comment");return addCommentEditListeners(o),n}